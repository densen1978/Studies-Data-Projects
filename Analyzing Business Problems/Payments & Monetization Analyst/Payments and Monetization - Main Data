WITH 
  customers as (
    SELECT 
      customers.customer_id,
      customers.customer_city,
      customers.customer_state, 
      customers.customer_zip_code_prefix,
    FROM `olist_db.olist_customesr_dataset` AS customers
    
  ),

  orders as (
    SELECT
      orders.*,
      order_items.seller_id,
      sellers.seller_state,
      order_items.price, 
      order_items.freight_value,
      ROUND((order_items.price + order_items.freight_value),2) AS revenue,
      product_en_name.string_field_1 as product_category,
      review_score,
      DATE_DIFF(order_delivered_customer_date, order_purchase_timestamp , DAY) as shipping_time,
      DATE_DIFF(order_estimated_delivery_date, order_delivered_customer_date  , DAY) AS delivery_estimated_time,
     CASE 
        WHEN order_estimated_delivery_date > order_delivered_customer_date 
          THEN 'On-Time'
          ELSE 'Late'
        END AS delivery_status
    FROM `olist_db.olist_orders_dataset` AS orders
    JOIN `olist_db.olist_order_items_dataset` AS order_items
      ON orders.order_id = order_items.order_id
    JOIN `olist_db.olist_sellers_dataset` AS sellers
    ON order_items.seller_id = sellers.seller_id
    JOIN `olist_db.olist_products_dataset` as products
      ON order_items.product_id = products.product_id
    LEFT JOIN `olist_db.product_category_name_translation` as product_en_name
      ON product_en_name.string_field_0 = products.product_category_name
    LEFT JOIN `olist_db.olist_order_reviews_dataset` as reviews
    ON reviews.order_id = orders.order_id
    WHERE order_status = 'delivered'
  ),

  combined_data as (
  SELECT 
    customers.*,
    orders.order_id,
    order_purchase_timestamp,
    order_approved_at,
    order_delivered_carrier_date,
    order_delivered_customer_date,
    order_estimated_delivery_date,
    product_category,
    seller_id,
    seller_state,
    delivery_status,
    review_score,
    price, 
    freight_value,
    revenue,
    shipping_time,
    delivery_estimated_time
  FROM customers
    JOIN orders
    ON customers.customer_id = orders.customer_id
  )

    SELECT 
    *
    FROM combined_data